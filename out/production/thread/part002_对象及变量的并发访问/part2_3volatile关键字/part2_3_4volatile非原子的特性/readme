关键字volatile虽然增加了实例变量在多个线程之间的可见性，但他却不具备同步性，那么也就不具备原子性

关键字volatile提示线程每次从共享内存中读取变量
而不是从私有内存中读取，这样就保证了同步数据的可见性

但在这里需要注意的是：
如果修改实例变量的数据，比如i++，也就是i=i+1，则这样的操作其实并不是一个原子操作，也就是非线程安全的

表达式i++操作步骤如下：
1.从内存取出i的值
2.计算i的值
3.将i的值写到内存中

假如在第二步计算值的时候，另一个线程也修改i的值，会出现脏数据

变量在内存中的工作过程：
1.read和load阶段：从主存复制变量到当前线程工作内存
2.use和assign阶段：执行代码，改变共享变量值
3.store和write阶段：用工作内存数据刷新主存变量的值